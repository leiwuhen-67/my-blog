(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{463:function(n,s,a){"use strict";a.r(s);var e=a(4),i=Object(e.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("p",[n._v("在 React Native 项目中，修改打包生成的 APK 文件名可以通过配置 Android 的 Gradle 构建脚本实现。以下是具体步骤：")]),n._v(" "),s("p",[n._v("1、打开 Gradle 配置文件"),s("br"),n._v("\n进入项目的 Android 模块目录，找到 android/app/build.gradle 文件。")]),n._v(" "),s("p",[n._v("2、修改构建脚本"),s("br"),n._v("\n在 android 配置块内添加以下代码，动态设置输出的 APK 文件名：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('android {\n    ...\n    applicationVariants.all { variant ->\n        variant.outputs.all {\n            def versionName = variant.versionName\n            def versionCode = variant.versionCode\n            def date = new Date().format("yyyyMMdd")\n            def buildType = variant.buildType.name\n            outputFileName = "AppName_${buildType}_v${versionName}_${date}.apk"\n        }\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br")])]),s("p",[n._v("参数说明：")]),n._v(" "),s("ul",[s("li",[n._v("versionName: 应用版本名称（在 defaultConfig 中定义）")]),n._v(" "),s("li",[n._v("versionCode: 应用版本代码（在 defaultConfig 中定义）")]),n._v(" "),s("li",[n._v("date: 当前日期，格式化为年月日（例如 20231023）")]),n._v(" "),s("li",[n._v("buildType: 构建类型（如 debug、release）"),s("br"),n._v("\n现在打包后的 apk 文件名如: AppName_release_v1.0.0_20231023.apk")])]),n._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[n._v("提示")]),n._v(" "),s("p",[n._v("Gradle 版本兼容性：使用 variant.outputs.all 代替旧版的 each 方法，确保兼容 Gradle 3.0+。")])]),n._v(" "),s("p",[n._v("按照如上操作完，再次执行打包命令可能会出现如下错误，错误信息显示 Task :app:packageRelease 失败，具体是执行 PackageAndroidArtifact$IncrementalSplitterRunnable 时出现问题："),s("br"),n._v(" "),s("img",{attrs:{src:"https://s3.bmp.ovh/imgs/2025/05/23/fa39b55b62bfd7e3.png",alt:""}}),s("br"),n._v("\n这可能是旧构建缓存导致冲突，需要清楚缓存")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("# 进入安卓项目目录\ncd android\n\n# 执行清理命令\n./gradlew clean\n\n# 重新打包\n./gradlew assembleRelease\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br")])]),s("p",[n._v("此时，能够正常打包了。")]),n._v(" "),s("p",[n._v("此时，按照上述配置打包后确实生成了一个 apk 文件，但是只生成了一个，按照此前拆分 cpu 架构（ABI 分包）的情况下应该生成多个 apk 文件才对啊，因此，需要进一步优化上述配置，"),s("br"),n._v("\n1、启用 ABI 分包配置"),s("br"),n._v("\n在 android/app/build.gradle 中配置 ABI 分包策略：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('android {\n    splits {\n        abi {\n            enable true // 启用ABI分包\n            reset()    // 重置默认配置\n            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64" // 指定拆分的ABI类型\n            universalApk true // 生成通用APK\n        }\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br")])]),s("p",[n._v("2、动态获取 ABI 架构类型")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('android {\n    applicationVariants.all { variant ->\n        variant.outputs.all { output ->\n            // 获取当前输出的ABI类型（如arm64-v8a）\n            def abi = output.getFilter(OutputFile.ABI)\n            def abiName = abi ? "_${abi}" : "_universal" // 处理无ABI的情况\n\n            def versionName = variant.versionName\n            def versionCode = variant.versionCode\n            def date = new Date().format("yyyyMMdd")\n            def buildType = variant.buildType.name\n\n            // 组合最终文件名\n            outputFileName = "MyApp_${buildType}_v${versionName}_${date}${abiName}.apk"\n        }\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br")])]),s("p",[n._v("此时，再打包，如果正确的下，应该会生成类似 MyApp_release_v1.2.0_20240101_arm64-v8a.apk 这种格式的 apk 文件的。")]),n._v(" "),s("p",[n._v("此时再次执行清理构建缓存操作，不出意外的话意外要出现了，又报错了，提示 “MissingPropertyException: No such property: ABI for class: org.gradle.api.tasks.OutputFile”"),s("br"),n._v(" "),s("img",{attrs:{src:"https://s3.bmp.ovh/imgs/2025/05/23/bd9aec627b62419b.png",alt:""}}),s("br"),n._v("\n 这是因为我们还没有引入 OutputFile。")]),n._v(" "),s("p",[n._v("解决办法：在 android/app/build.gradle 文件顶部添加以下导入语句")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("import com.android.build.OutputFile\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br")])]),s("p",[n._v("至此，再执行打包命令，就能成功打包了。")]),n._v(" "),s("p",[n._v("附上 android/app/build.gradle 文件的完整配置：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('import com.android.build.OutputFile \napply plugin: "com.android.application"\napply plugin: "org.jetbrains.kotlin.android"\napply plugin: "com.facebook.react"\n\nreact {\n    /* Autolinking */\n    autolinkLibrariesWithApp()\n}\n\ndef enableProguardInReleaseBuilds = true\ndef enableSeparateBuildPerCPUArchitecture = true\n\n\ndef jscFlavor = \'io.github.react-native-community:jsc-android:2026004.+\'\n\nproject.ext.react = [\n    enableHermes: true,  // 启用 Hermes\n    bundleInDebug: false,\n    bundleInRelease: true,\n    devDisabledInRelease: true\n]\n\nandroid {\n    ndkVersion rootProject.ext.ndkVersion\n    buildToolsVersion rootProject.ext.buildToolsVersion\n    compileSdk rootProject.ext.compileSdkVersion\n\n    namespace "com.videoapp"\n    defaultConfig {\n        applicationId "com.videoapp"\n        minSdkVersion rootProject.ext.minSdkVersion\n        targetSdkVersion rootProject.ext.targetSdkVersion\n        versionCode 1\n        versionName "1.0"\n    }\n    signingConfigs {\n        debug {\n            storeFile file(\'debug.keystore\')\n            storePassword \'android\'\n            keyAlias \'androiddebugkey\'\n            keyPassword \'android\'\n        }\n        release {\n            if (project.hasProperty(\'MYAPP_RELEASE_STORE_FILE\')) {\n                storeFile file(MYAPP_RELEASE_STORE_FILE)\n                storePassword MYAPP_RELEASE_STORE_PASSWORD\n                keyAlias MYAPP_RELEASE_KEY_ALIAS\n                keyPassword MYAPP_RELEASE_KEY_PASSWORD\n            }\n        }\n    }\n    buildTypes {\n        debug {\n            signingConfig signingConfigs.debug\n        }\n        release {\n            minifyEnabled true   // 启用代码压缩\n            shrinkResources true // 移除未使用的资源\n            signingConfig signingConfigs.debug\n            minifyEnabled enableProguardInReleaseBuilds\n            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"\n            signingConfig signingConfigs.release\n        }\n    }\n\n    // 自定义apk文件名\n    applicationVariants.all { variant ->\n        variant.outputs.all { output ->\n            // 动态获取ABI架构类型\n            def abi = output.getFilter(OutputFile.ABI)\n            def abiSuffix = abi ? "_${abi}" : "_universal"\n\n            // 其他参数\n            def projectName = "VideoApp"\n            def buildType = variant.buildType.name\n            def versionName = variant.versionName\n            def date = new Date().format("yyyyMMdd")\n\n            // 生成最终文件名\n            outputFileName = "${projectName}_${buildType}_v${versionName}_${date}${abiSuffix}.apk"\n        }\n    }\n\n    // 拆分cpu架构（ABI分包）\n    splits {\n        abi {\n            enable true\n            reset()\n            include "arm64-v8a", "x86", "x86_64" // 按需选择\n            universalApk true\n        }\n    }\n}\n\napply from: file("../../node_modules/react-native-vector-icons/fonts.gradle") // 使用react-native-vector-icons图标是需要添加\n\n\ndependencies {\n    // The version of react-native is set by the React Native Gradle Plugin\n    implementation("com.facebook.react:react-android")\n\n    if (hermesEnabled.toBoolean()) {\n        implementation("com.facebook.react:hermes-android")\n    } else {\n        implementation jscFlavor\n    }\n}\n\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br"),s("span",{staticClass:"line-number"},[n._v("72")]),s("br"),s("span",{staticClass:"line-number"},[n._v("73")]),s("br"),s("span",{staticClass:"line-number"},[n._v("74")]),s("br"),s("span",{staticClass:"line-number"},[n._v("75")]),s("br"),s("span",{staticClass:"line-number"},[n._v("76")]),s("br"),s("span",{staticClass:"line-number"},[n._v("77")]),s("br"),s("span",{staticClass:"line-number"},[n._v("78")]),s("br"),s("span",{staticClass:"line-number"},[n._v("79")]),s("br"),s("span",{staticClass:"line-number"},[n._v("80")]),s("br"),s("span",{staticClass:"line-number"},[n._v("81")]),s("br"),s("span",{staticClass:"line-number"},[n._v("82")]),s("br"),s("span",{staticClass:"line-number"},[n._v("83")]),s("br"),s("span",{staticClass:"line-number"},[n._v("84")]),s("br"),s("span",{staticClass:"line-number"},[n._v("85")]),s("br"),s("span",{staticClass:"line-number"},[n._v("86")]),s("br"),s("span",{staticClass:"line-number"},[n._v("87")]),s("br"),s("span",{staticClass:"line-number"},[n._v("88")]),s("br"),s("span",{staticClass:"line-number"},[n._v("89")]),s("br"),s("span",{staticClass:"line-number"},[n._v("90")]),s("br"),s("span",{staticClass:"line-number"},[n._v("91")]),s("br"),s("span",{staticClass:"line-number"},[n._v("92")]),s("br"),s("span",{staticClass:"line-number"},[n._v("93")]),s("br"),s("span",{staticClass:"line-number"},[n._v("94")]),s("br"),s("span",{staticClass:"line-number"},[n._v("95")]),s("br"),s("span",{staticClass:"line-number"},[n._v("96")]),s("br"),s("span",{staticClass:"line-number"},[n._v("97")]),s("br"),s("span",{staticClass:"line-number"},[n._v("98")]),s("br"),s("span",{staticClass:"line-number"},[n._v("99")]),s("br"),s("span",{staticClass:"line-number"},[n._v("100")]),s("br"),s("span",{staticClass:"line-number"},[n._v("101")]),s("br"),s("span",{staticClass:"line-number"},[n._v("102")]),s("br"),s("span",{staticClass:"line-number"},[n._v("103")]),s("br"),s("span",{staticClass:"line-number"},[n._v("104")]),s("br"),s("span",{staticClass:"line-number"},[n._v("105")]),s("br"),s("span",{staticClass:"line-number"},[n._v("106")]),s("br"),s("span",{staticClass:"line-number"},[n._v("107")]),s("br"),s("span",{staticClass:"line-number"},[n._v("108")]),s("br"),s("span",{staticClass:"line-number"},[n._v("109")]),s("br")])])])}),[],!1,null,null,null);s.default=i.exports}}]);