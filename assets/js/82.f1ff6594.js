(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{420:function(e,n,s){"use strict";s.r(n);var t=s(4),a=Object(t.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("在进行 NodeJs 开发时，经常要指定不同的环境，如测试环境、开发环境、生产环境等等，每次都手动改的话就很头大，因此急需要一款插件帮我们解决这个问题，这里强烈推荐 dotenv 这个插件，它能将环境变量中的变量从.env 文件加载到 process.env 中。"),n("br"),n("br"),e._v("\n为了在启动的时候指定环境和配置文件，需要安装另一个包 dotenv-cli")]),e._v(" "),n("p",[e._v("1、安装需要的包 dotenv 和 dotenv-cli")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm install dotenv dotenv-cli\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("2、创建两个.env 文件：.env.development 和.env.production")]),e._v(" "),n("p",[e._v("例如在.env.development 中配置如下：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("BASE_URL=127.0.0.1\nENV=development\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("在.env.production 中配置如下")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("BASE_URL=666.666.666.666\nENV=production\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("3、配置启动脚本，在 package.json 中")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('"scripts": {\n  "test": "echo \\"Error: no test specified\\" && exit 1",\n  "start": "nodemon index.js",\n  "dev": "dotenv -e .env.development nodemon index.js",\n  "prd": "dotenv -e .env.production pm2 start index.js"\n},\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br")])]),n("p",[e._v("4、使用环境变量，在项目入口文件中引入 dotenv")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 加载配置文件\nrequire('dotenv').config()\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("至此，当我们启动项目后，就可以通过 process.env.[环境变量中变量名] 来配置了。当执行 npm run dev 时，便能读取到.env.development 中的变量。执行 npm run prd 便能读取.env.production 中的变量了")])])}),[],!1,null,null,null);n.default=a.exports}}]);